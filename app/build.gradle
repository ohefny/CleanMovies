apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


//read local.properties to get flickr(key,secret,base_url)
def getLocalProperty = { k, defV ->
    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').canRead()) {
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
    }
    return properties.getProperty(k, defV)
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.example.swvlmovies"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "FLICKR_KEY", getLocalProperty("flickr.key", '""')//add default value for fast testing purposes
        buildConfigField "String", "FLICKR_BASE_URL",'"https://api.flickr.com"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.2.0-alpha03'
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha01'
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation "androidx.lifecycle:lifecycle-reactivestreams:2.1.0"

    implementation "io.reactivex.rxjava2:rxjava:2.2.15"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    //Networking
    def retrofitVersion = "2.5.0"
    def okhttpVersion = '3.12.1'
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: retrofitVersion
    implementation group: 'com.squareup.retrofit2', name: 'converter-scalars', version: retrofitVersion
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: retrofitVersion
    implementation group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: retrofitVersion
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttpVersion
    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: okhttpVersion

    //Dagger
    def daggerVersion = '2.21'
    kapt group: 'com.google.dagger', name: 'dagger-compiler', version: daggerVersion
    kapt group: 'com.google.dagger', name: 'dagger-android-processor', version: daggerVersion
    implementation group: 'com.google.dagger', name: 'dagger', version: daggerVersion
    implementation group: 'com.google.dagger', name: 'dagger-android', version: daggerVersion
    implementation group: 'com.google.dagger', name: 'dagger-android-support', version: daggerVersion
    //Timber logging
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    
    //Room
    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    //Testing
    testImplementation "org.mockito:mockito-core:2.25.0"
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'android.arch.core:core-testing:1.1.1'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
